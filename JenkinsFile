pipeline {
    agent any
    environment {
        NETLIFY_SITE_ID = '6cda1a95-b546-4388-8f9e-ebc706290706'
        NETLIFY_AUTH_TOKEN = credentials('netlify-token')

    }

    stages {
       
        stage('Build') {
            // Agent creation
            agent {
                docker {
                    image 'node:18-alpine'
                    reuseNode true
                }
            }
            steps {
               
                //npm build secton
                
                sh '''
                    echo 'Small change'
                    ls -la
                    node --version
                    npm --version
                    npm ci
                    npm run build
                    ls -la
                '''
            }
        }
       
        stage("Tests") {
            parallel{
                stage('Unit Test'){
                    agent {
                        docker {
                            image 'node:18-alpine'
                            reuseNode true
                        }
                    }
                    steps{
                        sh '''
                            echo "Test Stage"
                            test -f build/index.html
                            npm test
                        '''
                    }
                     post {
                        always {
                            junit 'jest-results/junit.xml'
                        }
                    }
                }
                stage('E2E'){
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                        }
                    }
                    steps{
                        sh '''
                        npm install serve
                        node_modules/.bin/serve -s build &
                        sleep 10
                        npx playwright test --reporter=html
                        '''
                    }
                     post {
                        always {
                            junit 'jest-results/junit.xml'
                            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright HTML Report', reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }
                }
                
            }
        }
        stage("Deploy Staging"){
            agent {
                    docker {
                        image 'node:18-alpine'
                        reuseNode true
                    }
                }
            steps{
                sh '''
                    npm install netlify-cli  node-jq
                    node_modules/.bin/netlify --version
                    echo "Deploying to staging . Site ID: $NETLIFY_SITE_ID"
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build > deploy-output.json
                    node_modules/.bin/node-jq -r '.deploy_url' deploy-output.json


                '''
            }
        }
        stage("Approval"){
            steps{
                timeout(time: 1, unit: 'MINUTES') {
                    input 'Read for deployment to prod?'
                }
            }
        }
        stage("Deploy"){
            agent {
                    docker {
                        image 'node:18-alpine'
                        reuseNode true
                    }
                }
            steps{
                sh '''
                    npm install netlify-cli
                    node_modules/.bin/netlify --version
                    echo "Deploying to production . Site ID: $NETLIFY_SITE_ID"
                    node_modules/.bin/netlify status
                    node_modules/.bin/netlify deploy --dir=build --prod


                '''
            }
        }
        stage('Prod E2E'){
                    agent {
                        docker {
                            image 'mcr.microsoft.com/playwright:v1.39.0-jammy'
                            reuseNode true
                        }
                    }
                    environment{
                        CI_ENVIRONMENT_URL = 'https://zesty-donut-cc01fc.netlify.app'
                    }
                    steps{
                        sh '''
                        npx playwright test --reporter=html
                        '''
                    }
                     post {
                        always {
                            junit 'jest-results/junit.xml'
                            publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: 'playwright-report', reportFiles: 'index.html', reportName: 'Playwright E2E Report', reportTitles: '', useWrapperFileDirectly: true])
                        }
                    }
                }
        
    }
   
}
